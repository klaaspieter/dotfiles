#!/usr/bin/env swift

// Taken from https://github.com/bouk/dark-mode-notify

// Run as ./dark-mode-notify <program to run when dark mode changes>
// The program will be called with either 'dark' or 'light' as the first and
// only argument.

import Cocoa

@discardableResult
func shell(_ args: [String]) -> Int32 {
  let isDark = UserDefaults.standard.string(forKey: "AppleInterfaceStyle") == "Dark"
  let arguments = args + [isDark ? "dark" : "light"]
  let task = Process()
  task.launchPath = "/usr/bin/env"
  task.arguments = arguments
  task.standardError = FileHandle.standardError
  task.standardOutput = FileHandle.standardOutput
  task.launch()
  task.waitUntilExit()
  return task.terminationStatus
}

let args = Array(CommandLine.arguments.suffix(from: 1))
shell(args)

DistributedNotificationCenter.default.addObserver(
  forName: Notification.Name("AppleInterfaceThemeChangedNotification"),
  object: nil,
  queue: nil
) { _ in
  shell(args)
}

NSApplication.shared.run()
